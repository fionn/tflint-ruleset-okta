name: CI

on: [push]

permissions:
  contents: read

jobs:

  build:

    name: Build
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: 1.24

      - name: Download dependencies
        run: go mod download

      - name: Build
        run: go build -v

  lint:

    name: Lint
    runs-on: ubuntu-latest

    permissions:
      contents: read
      checks: write
      security-events: write

    steps:

      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: 1.24

      - name: Check formatting
        run: test -z "$(gofmt -l .)"

      - name: Lint newlines
        uses: fionn/newline-linter@master

      - name: Lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1.6

      - name: Check dependency tidiness
        run: go mod tidy -diff

      - name: Check for vulnerable dependency use
        run: go tool govulncheck -format sarif ./... > govulncheck.sarif

      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: govulncheck.sarif
          category: govulncheck

  test:

    name: Test
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: 1.24

      - name: Test
        run: make test

  check_goreleaser:

    name: Check goreleaser
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: 1.24

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Check goreleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: check

      - name: Check goreleaser dependencies
        uses: goreleaser/goreleaser-action@v6
        with:
          args: healthcheck

  release:

    name: Release
    needs: ["build", "lint", "test", "check_goreleaser"]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    environment: release

    permissions:
      contents: write
      id-token: write
      attestations: write

    steps:

      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-tags: true
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: 1.24

      - name: Import PGP key
        id: pgp
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.PGP_PRIVATE_KEY }}
          passphrase: ${{ secrets.PGP_PASSPHRASE }}
          fingerprint: 5DD1B83D418D1DE5B8EE67FCC1C07C3443184B72

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --fail-fast
        env:
          GITHUB_TOKEN: ${{ github.token }}
          PGP_FINGERPRINT: ${{ steps.pgp.outputs.fingerprint }}

      - uses: actions/attest-build-provenance@v3
        with:
          subject-path: dist/checksums.txt
